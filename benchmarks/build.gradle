import org.apache.commons.lang3.SystemUtils

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'org.apache.commons:commons-lang3:3.5'
    }
}

plugins {
    id "me.champeau.gradle.jmh" version "0.3.1"
    id "io.morethan.jmhreport" version "0.1.0"
}

sourceCompatibility = 1.8

dependencies {
    jmh project(':environment')
    // the following dependency is necessary for running benchmarks in IntelliJ using ide-jmh-plugin
    jmh 'org.openjdk.jmh:jmh-generator-annprocess:1.17.5'
    jmh group: 'junit', name: 'junit', version: '4.12'
    jmh group: 'org.mapdb', name: 'mapdb', version: '3.0.2'
    jmh group: 'net.openhft', name: 'chronicle-map', version: '3.11.0'
    jmh group: 'com.h2database', name: 'h2-mvstore', version: '1.4.193'
    jmh group: 'org.deephacks.lmdbjni', name: 'lmdbjni', version: '0.4.6'

    def os
    if (SystemUtils.IS_OS_LINUX) {
        os = "linux64"
    } else if (SystemUtils.IS_OS_MAC_OSX) {
        os = "osx64"
    } else if (SystemUtils.IS_OS_WINDOWS) {
        os = "win64"
    }
    if (os) {
        jmh group: 'org.deephacks.lmdbjni', name: "lmdbjni-$os", version: '0.4.6'
    }
}

jmh {
    // uncomment the following line to exclude all benchmarks except Xodus Tokyo Cabinet
    //exclude = 'dataStructures|chronicle|h2|mapdb|lmdb'
    jmhVersion = '1.17.5'
    jvmArgsPrepend '-Xmx1g -Xms1g'
    duplicateClassesStrategy = 'warn'
    resultFormat = 'JSON'
}

jmhReport {
    jmhResultPath = project.file('build/reports/jmh/results.json')
    jmhReportOutput = project.file('build/reports/jmh')
}
tasks.jmh.finalizedBy tasks.jmhReport

uploadArchives {
    enabled = false
}