# Run complete. Total time: 02:21:08

Benchmark                                                                     Mode   Samples        Score  Score error    Units
j.e.b.dataStructures.JMHConcurrentObjectCacheBenchmark.cacheTryKey           thrpt        30       41.406        0.135   ops/us
j.e.b.dataStructures.JMHConcurrentObjectCacheBenchmark.cacheTryMissingKey    thrpt        30       51.122        0.165   ops/us
j.e.b.dataStructures.JMHHashMapBenchmark.hashMapGet                          thrpt        30       57.725        0.491   ops/us
j.e.b.dataStructures.JMHHashMapBenchmark.hashMapGetMissingKey                thrpt        30       76.686        0.231   ops/us
j.e.b.dataStructures.JMHJavaUtilHashMapBenchmark.hashMapGet                  thrpt        30       57.346        0.561   ops/us
j.e.b.dataStructures.JMHJavaUtilHashMapBenchmark.hashMapGetMissingKey        thrpt        30       68.611        0.644   ops/us
j.e.b.dataStructures.JMHObjectCacheBenchmark.cacheTryKey                     thrpt        30       11.339        0.086   ops/us
j.e.b.dataStructures.JMHObjectCacheBenchmark.cacheTryMissingKey              thrpt        30       59.088        0.510   ops/us
j.e.b.env.JMHEnvTokyoCabinetReadBenchmark.randomRead                            ss        60        2.625        0.019        s
j.e.b.env.JMHEnvTokyoCabinetReadBenchmark.successiveRead                        ss        60        0.128        0.030        s
j.e.b.env.JMHEnvTokyoCabinetWriteBenchmark.randomWrite                          ss        60        2.275        0.057        s
j.e.b.env.JMHEnvTokyoCabinetWriteBenchmark.successiveWrite                      ss        60        0.797        0.064        s
j.e.b.env.JMHEnvWithPrefixingTokyoCabinetReadBenchmark.randomRead               ss        60        1.319        0.031        s
j.e.b.env.JMHEnvWithPrefixingTokyoCabinetReadBenchmark.successiveRead           ss        60        0.307        0.043        s
j.e.b.env.JMHEnvWithPrefixingTokyoCabinetWriteBenchmark.randomWrite             ss        60        1.666        0.081        s
j.e.b.env.JMHEnvWithPrefixingTokyoCabinetWriteBenchmark.successiveWrite         ss        60        0.801        0.071        s
j.e.b.je.JMH_JETokyoCabinetReadBenchmark.randomRead                             ss        60        3.411        0.027        s
j.e.b.je.JMH_JETokyoCabinetReadBenchmark.successiveRead                         ss        60        1.728        0.196        s
j.e.b.je.JMH_JETokyoCabinetWriteBenchmark.randomWrite                           ss        60        6.544        0.156        s
j.e.b.je.JMH_JETokyoCabinetWriteBenchmark.successiveWrite                       ss        60        3.942        0.213        s
j.e.b.je.JMH_JEWithPrefixingTokyoCabinetReadBenchmark.randomRead                ss        60        3.735        0.048        s
j.e.b.je.JMH_JEWithPrefixingTokyoCabinetReadBenchmark.successiveRead            ss        60        1.199        0.141        s
j.e.b.je.JMH_JEWithPrefixingTokyoCabinetWriteBenchmark.randomWrite              ss        60        6.671        0.237        s
j.e.b.je.JMH_JEWithPrefixingTokyoCabinetWriteBenchmark.successiveWrite          ss        60        4.006        0.230        s
j.e.b.mapdb.JMHMapDbTokyoCabinetReadBenchmark.randomRead                        ss        16        6.897        0.226        s
j.e.b.mapdb.JMHMapDbTokyoCabinetReadBenchmark.successiveRead                    ss        16        0.293        0.095        s
j.e.b.mapdb.JMHMapDbTokyoCabinetWriteBenchmark.randomWrite                      ss        16       22.159        0.298        s
j.e.b.mapdb.JMHMapDbTokyoCabinetWriteBenchmark.successiveWrite                  ss        16       27.019        0.605        s