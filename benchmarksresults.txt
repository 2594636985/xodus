# Run complete. Total time: 02:22:29

Benchmark                                                                     Mode   Samples        Score  Score error    Units
j.e.b.dataStructures.JMHConcurrentObjectCacheBenchmark.cacheTryKey           thrpt        30       41.360        0.117   ops/us
j.e.b.dataStructures.JMHConcurrentObjectCacheBenchmark.cacheTryMissingKey    thrpt        30       50.880        0.343   ops/us
j.e.b.dataStructures.JMHHashMapBenchmark.hashMapGet                          thrpt        30       58.181        0.265   ops/us
j.e.b.dataStructures.JMHHashMapBenchmark.hashMapGetMissingKey                thrpt        30       77.250        1.154   ops/us
j.e.b.dataStructures.JMHJavaUtilHashMapBenchmark.hashMapGet                  thrpt        30       56.611        1.011   ops/us
j.e.b.dataStructures.JMHJavaUtilHashMapBenchmark.hashMapGetMissingKey        thrpt        30       68.125        0.675   ops/us
j.e.b.dataStructures.JMHObjectCacheBenchmark.cacheTryKey                     thrpt        30       11.259        0.084   ops/us
j.e.b.dataStructures.JMHObjectCacheBenchmark.cacheTryMissingKey              thrpt        30       58.465        0.221   ops/us
j.e.b.env.JMHEnvTokyoCabinetReadBenchmark.randomRead                            ss        60        2.674        0.018        s
j.e.b.env.JMHEnvTokyoCabinetReadBenchmark.successiveRead                        ss        60        0.163        0.052        s
j.e.b.env.JMHEnvTokyoCabinetWriteBenchmark.randomWrite                          ss        60        2.342        0.063        s
j.e.b.env.JMHEnvTokyoCabinetWriteBenchmark.successiveWrite                      ss        60        0.797        0.062        s
j.e.b.env.JMHEnvWithPrefixingTokyoCabinetReadBenchmark.randomRead               ss        60        1.302        0.017        s
j.e.b.env.JMHEnvWithPrefixingTokyoCabinetReadBenchmark.successiveRead           ss        60        0.311        0.044        s
j.e.b.env.JMHEnvWithPrefixingTokyoCabinetWriteBenchmark.randomWrite             ss        60        1.693        0.081        s
j.e.b.env.JMHEnvWithPrefixingTokyoCabinetWriteBenchmark.successiveWrite         ss        60        0.790        0.074        s
j.e.b.je.JMH_JETokyoCabinetReadBenchmark.randomRead                             ss        60        3.461        0.023        s
j.e.b.je.JMH_JETokyoCabinetReadBenchmark.successiveRead                         ss        60        1.616        0.205        s
j.e.b.je.JMH_JETokyoCabinetWriteBenchmark.randomWrite                           ss        60        6.713        0.166        s
j.e.b.je.JMH_JETokyoCabinetWriteBenchmark.successiveWrite                       ss        60        4.007        0.203        s
j.e.b.je.JMH_JEWithPrefixingTokyoCabinetReadBenchmark.randomRead                ss        60        3.873        0.104        s
j.e.b.je.JMH_JEWithPrefixingTokyoCabinetReadBenchmark.successiveRead            ss        60        1.156        0.107        s
j.e.b.je.JMH_JEWithPrefixingTokyoCabinetWriteBenchmark.randomWrite              ss        60        6.744        0.237        s
j.e.b.je.JMH_JEWithPrefixingTokyoCabinetWriteBenchmark.successiveWrite          ss        60        4.098        0.238        s
j.e.b.mapdb.JMHMapDbTokyoCabinetReadBenchmark.randomRead                        ss        16        6.978        0.227        s
j.e.b.mapdb.JMHMapDbTokyoCabinetReadBenchmark.successiveRead                    ss        16        0.308        0.097        s
j.e.b.mapdb.JMHMapDbTokyoCabinetWriteBenchmark.randomWrite                      ss        16       22.184        0.447        s
j.e.b.mapdb.JMHMapDbTokyoCabinetWriteBenchmark.successiveWrite                  ss        16       26.949        0.517        s